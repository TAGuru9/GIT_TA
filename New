DECLARE @Year  INT = 2025;
DECLARE @Month INT = NULL; -- 1..12 or NULL
DECLARE @StartOfYear DATE = DATEFROMPARTS(@Year,1,1);
DECLARE @StartNextYear DATE = DATEFROMPARTS(@Year+1,1,1);

SELECT
    YEAR(T.TS_CREATION_DATE)  AS Run_Year,
    MONTH(T.TS_CREATION_DATE) AS Run_Month,

    -- Created (this year)
    SUM(CASE WHEN T.TS_NAME LIKE 'TA\_%' ESCAPE '\' 
             AND T.TS_CREATION_DATE >= @StartOfYear 
             AND T.TS_CREATION_DATE <  @StartNextYear THEN 1 ELSE 0 END) AS Created_Automated,
    SUM(CASE WHEN T.TS_NAME NOT LIKE 'TA\_%' ESCAPE '\' 
             AND T.TS_CREATION_DATE >= @StartOfYear 
             AND T.TS_CREATION_DATE <  @StartNextYear THEN 1 ELSE 0 END) AS Created_Manual,
    SUM(CASE WHEN T.TS_CREATION_DATE >= @StartOfYear 
             AND T.TS_CREATION_DATE <  @StartNextYear THEN 1 ELSE 0 END) AS Created_Total,

    -- Modified (this year, but created BEFORE this year)
    SUM(CASE WHEN T.TS_NAME LIKE 'TA\_%' ESCAPE '\' 
             AND T.TS_VTS       >= @StartOfYear AND T.TS_VTS       < @StartNextYear
             AND T.TS_CREATION_DATE < @StartOfYear THEN 1 ELSE 0 END) AS Modified_Automated,
    SUM(CASE WHEN T.TS_NAME NOT LIKE 'TA\_%' ESCAPE '\'
             AND T.TS_VTS       >= @StartOfYear AND T.TS_VTS       < @StartNextYear
             AND T.TS_CREATION_DATE < @StartOfYear THEN 1 ELSE 0 END) AS Modified_Manual,
    SUM(CASE WHEN T.TS_VTS >= @StartOfYear AND T.TS_VTS < @StartNextYear
             AND T.TS_CREATION_DATE < @StartOfYear THEN 1 ELSE 0 END) AS Modified_Total
FROM [amfc_isqat_db].[td].[TEST] AS T
WHERE YEAR(T.TS_CREATION_DATE) = @Year
  AND (@Month IS NULL OR MONTH(T.TS_CREATION_DATE) = @Month)
GROUP BY YEAR(T.TS_CREATION_DATE), MONTH(T.TS_CREATION_DATE)
ORDER BY Run_Year, Run_Month;
